/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.cdv.view;

import br.com.cdv.dao.ControleEstoqueDAO;
import br.com.cdv.dao.ItemVendaDAO;
import br.com.cdv.dao.ProdutoDAO;
import br.com.cdv.dao.VendasDAO;
import br.com.cdv.model.ControleEstoque;
import br.com.cdv.model.ItemVendas;
import br.com.cdv.model.Model_Card;
import br.com.cdv.model.Produtos;
import br.com.cdv.model.Vendas;
import com.raven.event.EventMenuSelected;
import java.text.DecimalFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


public class FrmMenu extends javax.swing.JFrame {

    public String usuarioLogado;
    public String nivel_acesso;
    public double gastos_semana, gastos_mes, valor_por_produto, lucros_semana, lucros_mes;
    public double total_vend_mes;
    public int qtd_vend_mes;

    public FrmMenu() {
        initComponents();
        menu.initMoving(FrmMenu.this);
        menu.addEventMenuSelected(new EventMenuSelected(){
            @Override
            public void selected(int index){
                if(index == 1){
                    FrmClientes telaClientes = new FrmClientes();
                    telaClientes.setVisible(true);
                }else if(index == 2){
                    FrmFuncionarios telafunc = new FrmFuncionarios();
                    telafunc.acesso = nivel_acesso;
                    telafunc.setVisible(true);
                    
                }else if(index == 3){
                    FrmFornecedores telaforne = new FrmFornecedores();
                    telaforne.setVisible(true);
                    
                }else if(index == 5){
                    FrmEstoque telacontrolEstoque = new FrmEstoque();
                    telacontrolEstoque.setVisible(true);
                    
                }else if(index == 6){
                    FrmProdutos telaproduto = new FrmProdutos();
                    telaproduto.setVisible(true);
                    
                }else if(index == 8){
                    FrmVendas telavendas = new FrmVendas();
                    telavendas.setVisible(true);
                    
                }else if(index == 9){
                    if ((nivel_acesso.equals("Administrador"))) {
                        FrmTotalVenda telatotalvendas = new FrmTotalVenda();
                        telatotalvendas.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Você não tem permissão para usar essa função!");
                    }
                    
                }else if(index == 10){
                    if ((nivel_acesso.equals("Administrador"))) {
                        FrmHistorico telahistorico = new FrmHistorico();
                        telahistorico.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Você não tem permissão para usar essa função!");
                    }
                    
                }else if(index == 12){

                    FrmLogin telalogin = new FrmLogin();
                    fechartela();
                    telalogin.setVisible(true);
                    
                    
                }
                else if(index == 13){
                    System.exit(0);
                    
                }
                
            }
            
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new javax.swing.JScrollPane();
        telapainel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        IDusuario = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        card1 = new br.com.cdv.components.Card();
        card2 = new br.com.cdv.components.Card();
        card3 = new br.com.cdv.components.Card();
        card4 = new br.com.cdv.components.Card();
        card5 = new br.com.cdv.components.Card();
        card6 = new br.com.cdv.components.Card();
        menu = new com.raven.component.Menu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Controle de Vendas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        scroll.setBackground(new java.awt.Color(255, 255, 255));

        telapainel.setBackground(new java.awt.Color(255, 255, 255));

        IDusuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        IDusuario.setForeground(new java.awt.Color(51, 51, 255));
        IDusuario.setText("JOHN");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText("Usuário Logado:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDusuario)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        card1.setColor1(new java.awt.Color(51, 102, 255));
        card1.setColor2(new java.awt.Color(0, 51, 153));

        card2.setColor1(new java.awt.Color(51, 102, 255));
        card2.setColor2(new java.awt.Color(0, 51, 153));

        card3.setColor1(new java.awt.Color(255, 102, 102));
        card3.setColor2(new java.awt.Color(153, 0, 51));

        card4.setColor1(new java.awt.Color(255, 102, 102));
        card4.setColor2(new java.awt.Color(153, 0, 51));

        card5.setColor1(new java.awt.Color(102, 153, 255));
        card5.setColor2(new java.awt.Color(0, 153, 204));

        card6.setColor1(new java.awt.Color(102, 153, 255));
        card6.setColor2(new java.awt.Color(0, 153, 204));

        javax.swing.GroupLayout telapainelLayout = new javax.swing.GroupLayout(telapainel);
        telapainel.setLayout(telapainelLayout);
        telapainelLayout.setHorizontalGroup(
            telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(telapainelLayout.createSequentialGroup()
                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(telapainelLayout.createSequentialGroup()
                        .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(telapainelLayout.createSequentialGroup()
                        .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(card4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        telapainelLayout.setVerticalGroup(
            telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telapainelLayout.createSequentialGroup()
                .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(telapainelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(card2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(telapainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        scroll.setViewportView(telapainel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void fechartela(){
        this.dispose();
    }
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setExtendedState(this.MAXIMIZED_BOTH);
        IDusuario.setText(usuarioLogado);
        this.setVisible(true);
        

        gastos_semana = 0;
        lucros_semana = 0;
        gastos_mes = 0;
        lucros_mes = 0;
        valor_por_produto = 0;
        total_vend_mes = 0;
        qtd_vend_mes = 0;
        
        
        DecimalFormat df = new DecimalFormat("#,###.00");
        LocalDate data_atual = LocalDate.now();
        DateTimeFormatter data_pradrao = DateTimeFormatter.ofPattern("yyyy-MM-01");
        DateTimeFormatter cont_dia = DateTimeFormatter.ofPattern("dd");
        DateTimeFormatter cont_mes = DateTimeFormatter.ofPattern("MM");
        LocalDate data_da_semana = data_atual;
        String data_um_do_mes = data_atual.format(data_pradrao);
        
        LocalDate data_cont_semana = data_atual;
        LocalDate ultimo_domingo = data_atual;

        for (int i = 0; i <= 7; i++) {
            if (data_cont_semana.getDayOfWeek() == DayOfWeek.SUNDAY) {
                ultimo_domingo = data_cont_semana;
                break;
            }
            data_cont_semana = data_cont_semana.minusDays(1);
        }

        ControleEstoque dao = new ControleEstoque();
        Vendas vdao = new Vendas();
        ItemVendaDAO idao = new ItemVendaDAO();
        Produtos produto = new Produtos();
        List<ControleEstoque> listaEstoqueSemana = new ArrayList<ControleEstoque>();
        List<Vendas> listaVendaSemana = new ArrayList<Vendas>();
        List<ControleEstoque> listaEstoqueMes = new ArrayList<ControleEstoque>();
        List<Vendas> listaVendaMes = new ArrayList<Vendas>();
        List<ItemVendas> listaItemVenda = new ArrayList<ItemVendas>();

        listaVendaSemana = vdao.listarVendasPorPeriodo(data_da_semana.toString(), data_atual);
        listaEstoqueSemana = dao.listarEstoquePorPeriodo(data_da_semana.toString(), data_atual);
        listaVendaMes = vdao.listarVendasPorPeriodo(data_um_do_mes, data_atual);
        listaEstoqueMes = dao.listarEstoquePorPeriodo(data_um_do_mes, data_atual);

        for (ControleEstoque e : listaEstoqueSemana) {
            produto = produto.buscaPorCodigo(e.getProduto().getId());
            valor_por_produto = produto.getValor_bruto()* e.getQtd_adicionada();
            gastos_semana += valor_por_produto;
        }
        for (Vendas v : listaVendaSemana) {
            lucros_semana += v.getTotalVenda();
        }
        for (ControleEstoque e : listaEstoqueMes) {
            produto = produto.buscaPorCodigo(e.getProduto().getId());
            valor_por_produto = produto.getValor_bruto() * e.getQtd_adicionada();
            gastos_mes += valor_por_produto;
        }
        for (Vendas v : listaVendaMes) {
            lucros_mes += v.getTotalVenda();
        }

        for (Vendas v : listaVendaMes) {
            listaItemVenda = idao.listaItensPorVenda(v.getId());
            for (ItemVendas i : listaItemVenda) {
                qtd_vend_mes += i.getQtd();
                total_vend_mes += i.getSubtotal();
            }
        }

        lucros_semana -= gastos_semana;
        lucros_mes -= gastos_mes;

        //System.out.println(url.toString());
        card1.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/profit.png")), "Lucro(Semana)", "R$ "+df.format(lucros_semana), "Lucro gerado na semana."));
        card2.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/profit.png")), "Lucro(Mês)", "R$ "+df.format(lucros_mes), "Lucro gerado no mês."));
        card3.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/despesas.png")), "Gasto(Semana)", "R$ "+df.format(gastos_semana), "Gastos gerado na semana."));
        card4.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/despesas.png")), "Gasto(Mês)", "R$ "+df.format(gastos_mes), "Gastos gerado no mês."));
        card5.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/quantVendida.png")), "Quantidade(Mês)", String.valueOf(qtd_vend_mes), "Quantidade vendida no mês."));
        card6.setData(new Model_Card(new ImageIcon(getClass().getResource("/imagens/totalVendas.png")), "Valor Total(Mês)", "R$"+df.format(total_vend_mes), "Valor total vendido no mês."));
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDusuario;
    private br.com.cdv.components.Card card1;
    private br.com.cdv.components.Card card2;
    private br.com.cdv.components.Card card3;
    private br.com.cdv.components.Card card4;
    private br.com.cdv.components.Card card5;
    private br.com.cdv.components.Card card6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private com.raven.component.Menu menu;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JPanel telapainel;
    // End of variables declaration//GEN-END:variables
}
